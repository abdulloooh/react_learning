{"version":3,"sources":["components/common/pagination.jsx","components/common/listGroup.jsx","components/common/search.jsx","services/logService.js","services/httpService.js","services/movieService.js","services/genreService.js","services/authService.js","components/common/like.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/moviesTable.jsx","components/movies.jsx","utils/paginate.jsx","components/navbar.jsx","components/notFound.jsx","components/customers.jsx","components/rentals.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/movieForm.jsx","components/loginForm.jsx","services/userService.js","components/regsiterForm.jsx","components/common/protectedRoute.jsx","components/logout.jsx","App.js","serviceWorker.js","index.js"],"names":["Pagination","props","pageSize","itemsCount","currentPage","onPageChange","pagesCount","Math","ceil","pages","_","range","className","map","page","key","href","onClick","ListGroup","items","onItemSelect","selectedItem","keyProperty","valueProperty","item","style","cursor","defaultProps","Search","name","rest","type","id","init","log","err","console","error","axios","defaults","baseURL","process","interceptors","response","use","status","toast","logger","Promise","reject","get","post","put","delete","patch","setJwt","jwt","headers","common","movieUrl","getMovie","http","saveMovie","movie","body","_id","deleteMovie","getGenres","tokenKey","email","password","a","data","localStorage","setItem","getJwt","getItem","login","loginWithJWT","logout","removeItem","getCurrentUser","JwtDecode","ex","Like","classes","liked","TableHeader","raiseSort","path","order","sortColumn","onSort","renderSortIcon","column","columns","this","label","Component","TableBody","renderCell","content","MoviesTable","adminCheck","to","title","like","user","authService","isAdmin","push","onDelete","movies","Movies","state","allMovies","allGenres","searchQuery","genreChange","genre","setState","selectedGenre","handleDelete","originalMovies","filter","m","handleClick","index","indexOf","handleSort","handlePageChange","handleSearch","currentTarget","value","genres","count","length","getPagedData","totalCount","Fragment","placeholder","onChange","filtered","toLowerCase","startsWith","startIndex","slice","take","Paginate","orderBy","Navbar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NotFound","Customers","Rentals","Input","htmlFor","constructor","Array","Select","options","option","Form","errors","validate","result","Joi","schema","abortEarly","details","message","handleSubmit","e","preventDefault","doSubmit","validateProperty","handleChange","input","errorMessage","autoComplete","MovieForm","genreId","numberInStock","dailyRentalRate","required","string","number","min","max","populateGenre","populateMovie","match","params","window","location","mapToViewModel","autoclose","history","replace","action","onSubmit","renderInput","renderSelect","renderButton","LoginForm","username","auth","from","pathname","register","RegisterForm","minDomainAtoms","ProtectedRoute","component","render","Logout","App","role","exact","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.0e8701e1.chunk.js","sourcesContent":["import React from \"react\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\n\nconst Pagination = (props) => {\n  const { pageSize, itemsCount, currentPage, onPageChange } = props;\n\n  const pagesCount = Math.ceil(itemsCount / pageSize); //ceil ceils the value to the nearest greater whole number\n\n  if (pagesCount === 1) return null;\n\n  const pages = _.range(1, pagesCount + 1);\n  return (\n    <nav>\n      <ul className=\"pagination\">\n        {pages.map((page) => {\n          return (\n            <li\n              key={page}\n              className={\n                page === currentPage ? \"page-item active\" : \"page-item\"\n              }\n            >\n              <a\n                href=\"#\"\n                className=\"page-link\"\n                onClick={() => {\n                  onPageChange(page);\n                }}\n              >\n                {page}\n              </a>\n            </li>\n          );\n        })}\n      </ul>\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n  pageSize: PropTypes.number.isRequired,\n  itemsCount: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n};\n\nexport default Pagination;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ListGroup = (props) => {\n  const {\n    items,\n    onItemSelect,\n    selectedItem,\n    keyProperty,\n    valueProperty,\n  } = props;\n  return (\n    <ul className=\"list-group py-5\">\n      {items.map((item) => {\n        return (\n          <li\n            key={item[keyProperty]}\n            style={{ cursor: \"pointer\" }}\n            className={\n              item === selectedItem\n                ? \"list-group-item active\"\n                : \"list-group-item\"\n            }\n            onClick={() => onItemSelect(item)}\n          >\n            {item[valueProperty]}\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nListGroup.defaultProps = {\n  keyProperty: \"_id\",\n  valueProperty: \"name\",\n};\n\nListGroup.propTypes = {\n  items: PropTypes.array,\n  onItemSelect: PropTypes.func,\n  selectedItem: PropTypes.object,\n};\nexport default ListGroup;\n\n/*\nMake common completely dynamic...for ListGrp=>textPpt,valuePpt\nMake all props name a genric name for reusability\ncamelCase for naming files\nnaming consistency back and forth within prop and prop-parent\nwhile returning sth to the parent, return the whole stuff not some part of it,\n//let parent decides what is needed eg item instead of item.name\n\nIn other words, interface should be flexible\n*/\n","import React from \"react\";\n\nconst Search = ({ name, ...rest }) => {\n  return (\n    <div className=\"form-group\">\n      <input type=\"text\" className=\"form-control\" id={name} {...rest} />\n    </div>\n  );\n};\n\nexport default Search;\n","// import * as Sentry from \"@sentry/browser\";\n// import Raven from \"raven-js\";\n\nfunction init() {\n  //   Sentry.init({\n  //     dsn:\n  //       \"https://1b4158bfbb564573a23586b0ae7d471e@o388115.ingest.sentry.io/5224486\",\n  //     release: \"1-0-0\",\n  //     environment: \"staging\",\n  //   });\n  //   // Sentry.configureScope(function(scope) {\n  //   //   scope.setTag(\"version\", \"1.0.0\");\n  //   // });\n  //   //   Raven.config(\n  //   //     \"https://1b4158bfbb564573a23586b0ae7d471e@o388115.ingest.sentry.io/5224486\",\n  //   //     {\n  //   //       release: \"1-0-0\",\n  //   //       environment: \"development-test\",\n  //   //     }\n  //   //   ).install();\n\n  return;\n}\n\nfunction log(err) {\n  // Raven.captureException(err);\n  // Sentry.captureMessage(err);\n  console.error(\"Error Message:\", err);\n}\n\nexport default {\n  init,\n  log,\n};\n","import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport logger from \"./logService\";\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.interceptors.response.use(null, (error) => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  // Unexpected (Network down, server down, db down, bug in code)\n  // log the error\n  // Display a generic and friendly error message eg unexpected error encountered\n  if (!expectedError) {\n    toast.error(\"Unexpected error encountered\");\n    // toast.error(\"Second Unexpected error encountered\", { containerId: \"B\" });\n    logger.log(error);\n  }\n\n  return Promise.reject(error);\n});\n\nfunction setJwt(jwt) {\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\n}\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n  patch: axios.patch,\n  setJwt,\n};\n","import http from \"./httpService\";\n\nconst apiEndpoint = \"/movies\";\n\nfunction movieUrl(id) {\n  return `${apiEndpoint}/${id}`;\n}\n\nexport function getMovies() {\n  return http.get(apiEndpoint);\n}\n\nexport function getMovie(id) {\n  return http.get(movieUrl(id));\n}\n\nexport function saveMovie(movie) {\n  // let movieInDb = {};\n  // movieInDb.title = movie.title;\n  // movieInDb.genreId = movie.genreId;\n  // movieInDb.numberInStock = movie.numberInStock;\n  // movieInDb.dailyRentalRate = movie.dailyRentalRate;\n\n  //implementation above is awesome but too much lines of code\n\n  // note: do not directly modify the movie cos it is part of the state\n\n  const body = { ...movie };\n  delete body._id;\n\n  return movie._id\n    ? http.put(movieUrl(movie._id), body)\n    : http.post(apiEndpoint, body);\n}\n\nexport function deleteMovie(id) {\n  http.delete(movieUrl(id));\n}\n","import http from \"./httpService\";\n\nexport function getGenres() {\n  return http.get(\"/genres\");\n}\n","import JwtDecode from \"jwt-decode\";\nimport http from \"./httpService\";\n\nconst loginApiEndpoint = \"/auth\";\nconst tokenKey = \"vidly_token\";\n\nhttp.setJwt(getJwt());\n\nexport async function login(email, password) {\n  const { data: jwt } = await http.post(loginApiEndpoint, {\n    email: email,\n    password: password,\n  });\n  localStorage.setItem(tokenKey, jwt);\n}\n\nexport function logout() {\n  localStorage.removeItem(tokenKey);\n}\n\nexport function getCurrentUser() {\n  try {\n    return JwtDecode(localStorage.getItem(tokenKey));\n  } catch (ex) {\n    return null;\n  }\n}\n\nexport function getJwt() {\n  return localStorage.getItem(tokenKey);\n}\n\nexport function loginWithJWT(jwt) {\n  localStorage.setItem(tokenKey, jwt);\n}\n\nexport default {\n  login,\n  loginWithJWT,\n  logout,\n  getCurrentUser,\n  getJwt,\n};\n","import React from \"react\";\n//interface  input: like status and handle like click   output: heart with plain or black bg\nconst Like = (props) => {\n  let classes = \"fa fa-heart\";\n  if (!props.liked) classes += \"-o\"; //because the value is undefined by default, it will be plain\n  return (\n    <i\n      className={classes}\n      onClick={props.onClick}\n      style={{ cursor: \"pointer\" }}\n    ></i>\n  );\n};\n\nexport default Like;\n","import React, { Component } from \"react\";\n\n//columns: Array\n//sortColumn : obj\n//onSort : func\nclass TableHeader extends Component {\n  raiseSort = (path) => {\n    let order = \"asc\";\n    if (path === this.props.sortColumn.path) {\n      order = this.props.sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\n    }\n    this.props.onSort({ path, order });\n  };\n\n  renderSortIcon = (column) => {\n    const { sortColumn } = this.props;\n    if (column.path !== sortColumn.path) return null;\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\"></i>;\n    return <i className=\"fa fa-sort-desc\"></i>;\n  };\n\n  render() {\n    const { columns } = this.props;\n    return (\n      <thead>\n        <tr>\n          {columns.map((column) => (\n            <th\n              className=\"clickable\"\n              key={column.path || column.key}\n              onClick={() => {\n                this.raiseSort(column.path);\n              }}\n            >\n              {column.label}\n              {this.renderSortIcon(column)}\n            </th>\n          ))}\n        </tr>\n      </thead>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\n\n//data\n//columns\nclass TableBody extends Component {\n  renderCell = (item, column) => {\n    if (column.content) return column.content(item);\n    // if (column.path === \"title\")\n    //   return <Link to={`/movies/${item._id}`}>{item[column.path]}</Link>;\n    return _.get(item, column.path);\n  };\n\n  render() {\n    const { data, columns } = this.props;\n\n    return (\n      <tbody>\n        {data.map((item) => (\n        <tr key={item._id}>\n            {columns.map((column) => (\n              <td key={column.path || column.key}>\n                {this.renderCell(item, column)}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    );\n  }\n}\n\nexport default TableBody;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport authService from \"../services/authService\";\nimport Like from \"./common/like\";\nimport TableHeader from \"./common/tableHeader\";\nimport TableBody from \"./common/tableBody\";\n//sortColumn : object\n//onSort\nclass MoviesTable extends Component {\n  columns = [\n    {\n      path: \"title\",\n      label: \"Title\",\n      content: (item) =>\n        this.props.adminCheck ? (\n          <Link to={`/movies/${item._id}`}>{item.title}</Link>\n        ) : (\n          item.title\n        ),\n    },\n    { path: \"genre.name\", label: \"Genre\" },\n    { path: \"numberInStock\", label: \"Stock\" },\n    { path: \"dailyRentalRate\", label: \"Rate\" },\n    {\n      key: \"like\",\n      content: (movie) => (\n        <Like liked={movie.like} onClick={() => this.props.onClick(movie)} />\n      ),\n    },\n  ];\n\n  constructor() {\n    super();\n    const user = authService.getCurrentUser();\n    if (user && user.isAdmin) {\n      this.columns.push({\n        key: \"delete\",\n        content: (movie) => (\n          <button\n            className=\"btn btn-danger btn-sm mt-2\"\n            onClick={() => {\n              this.props.onDelete(movie);\n            }}\n          >\n            Delete\n          </button>\n        ),\n      });\n    }\n  }\n\n  render() {\n    const { movies, onSort, sortColumn } = this.props;\n\n    return (\n      <table className=\"table\">\n        <TableHeader\n          columns={this.columns}\n          sortColumn={sortColumn}\n          onSort={onSort}\n        />\n        <TableBody data={movies} columns={this.columns} />\n      </table>\n    );\n  }\n}\n\nexport default MoviesTable;\n\n//this was extracted here for consistency, i.e to avoid mixing low level codes with the high level codes where it was\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport { toast } from \"react-toastify\";\nimport { Paginate } from \"../utils/paginate\";\nimport Pagination from \"./common/pagination\";\nimport ListGroup from \"./common/listGroup\";\nimport Search from \"./common/search\";\nimport { getMovies, deleteMovie } from \"../services/movieService\";\nimport { getGenres } from \"../services/genreService\";\nimport authService from \"../services/authService\";\nimport MoviesTable from \"./moviesTable\";\n\nclass Movies extends Component {\n  state = {\n    allMovies: [],\n    allGenres: [],\n    pageSize: 3,\n    currentPage: 1,\n    searchQuery: \"\",\n    sortColumn: { path: \"title\", order: \"asc\" },\n  };\n  async componentDidMount() {\n    const { data: genres } = await getGenres();\n    const { data: allMovies } = await getMovies();\n    this.setState({\n      allMovies,\n      allGenres: [{ _id: \"\", name: \"All Genres\" }, ...genres],\n    });\n  }\n\n  genreChange = (genre) => {\n    // console.log(genreName);\n    this.setState({ currentPage: 1 });\n    this.setState({ selectedGenre: genre, searchQuery: \"\" });\n  };\n\n  handleDelete = async (movie) => {\n    const originalMovies = this.state.allMovies;\n    const movies = this.state.allMovies.filter((m) => m._id !== movie._id);\n    this.setState({ allMovies: movies });\n\n    try {\n      await deleteMovie(movie._id);\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404) {\n        toast.error(\"This movie can not be found\");\n      } else if (ex.response && ex.response.status === 400) {\n        toast.error(\"Invalid request\");\n      }\n\n      this.setState({ allMovies: originalMovies });\n    }\n  };\n\n  handleClick = (movie) => {\n    let movies = [...this.state.allMovies]; //clone\n    const index = movies.indexOf(movie);\n    movies[index] = { ...this.state.allMovies[index] };\n    movies[index].like = !movies[index].like;\n    this.setState({ allMovies: movies });\n  };\n\n  handleSort = (sortColumn) => {\n    this.setState({ sortColumn });\n  };\n  // handleSort = (path) => {\n  //   let sortColumn = { ...this.state.sortColumn };\n  //   if (path === sortColumn.path)\n  //     sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\n  //   else {\n  //     sortColumn.path = path;\n  //     sortColumn.order = \"asc\";\n  //   }\n  //   this.setState({ sortColumn });\n  // };\n\n  handlePageChange = (page) => {\n    this.setState({ currentPage: page });\n  };\n\n  handleSearch = ({ currentTarget }) => {\n    const searchQuery = currentTarget.value;\n\n    const currentPage = 1;\n\n    this.setState({ searchQuery, currentPage, selectedGenre: null });\n  };\n\n  render() {\n    const user = authService.getCurrentUser();\n\n    const {\n      allMovies,\n      allGenres,\n      pageSize,\n      currentPage,\n      selectedGenre,\n      sortColumn,\n      searchQuery,\n    } = this.state;\n    const { length: count } = allMovies;\n    // console.log(allGenres);\n\n    // if (count === 0)\n    //   return <p className=\"mt-3\">Their are no movies in the database</p>;\n\n    const { totalCount, movies } = this.getPagedData(\n      selectedGenre,\n      allMovies,\n      sortColumn,\n      pageSize,\n      currentPage,\n      searchQuery\n    );\n    return (\n      <React.Fragment>\n        <div className=\"row mt-5\">\n          <div className=\"col-sm-2\">\n            <ListGroup\n              items={allGenres}\n              onItemSelect={this.genreChange}\n              selectedItem={selectedGenre}\n              // keyProperty=\"_id\"\n              // valueProperty=\"name\"\n            />\n          </div>\n\n          <div className=\"col\">\n            {/* <button className=\"btn btn-primary\">\n              <a onClick={() => this.props.history.push(\"/movies/new\")}>\n                New Movie\n              </a>\n            </button> */}\n            {user && (\n              <Link className=\"btn btn-primary\" to=\"/movies/new\">\n                Add Movie\n              </Link>\n            )}\n\n            <p className=\"mt-2\">\n              Showing {totalCount} movie{count === 1 ? \"\" : \"s\"} in the database\n            </p>\n\n            <Search\n              name=\"search\"\n              placeholder=\"Search...\"\n              onChange={this.handleSearch}\n              value={searchQuery}\n            />\n\n            <MoviesTable\n              movies={movies}\n              onClick={this.handleClick}\n              onDelete={this.handleDelete}\n              onSort={this.handleSort}\n              sortColumn={sortColumn}\n            />\n            <Pagination\n              pageSize={pageSize}\n              itemsCount={totalCount}\n              currentPage={currentPage}\n              onPageChange={this.handlePageChange}\n            />\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  getPagedData(\n    selectedGenre,\n    allMovies,\n    sortColumn,\n    pageSize,\n    currentPage,\n    searchQuery\n  ) {\n    const filtered =\n      selectedGenre && selectedGenre._id //truth\n        ? allMovies.filter((movie) => movie.genre._id === selectedGenre._id)\n        : searchQuery\n        ? allMovies.filter((movie) =>\n            movie.title.toLowerCase().startsWith(searchQuery)\n          )\n        : allMovies;\n    // const sorted = _.sortBy(filtered, this.state.sortColumn.path); //only for ascending sorting\n    const sorted = _.orderBy(filtered, sortColumn.path, sortColumn.order);\n    const movies = Paginate(sorted, pageSize, currentPage);\n    return { totalCount: filtered.length, movies };\n  }\n}\n\nexport default Movies;\n","import _ from \"lodash\";\n\nexport function Paginate(items, pageSize, currentPage) {\n  const startIndex = (currentPage - 1) * pageSize;\n  // const endIndex = startIndex + (pageSize - 1);\n  // return _.slice(items, startIndex, endIndex + 1); //slice from lodash does not include the end\n  //I could have made it easy but just for revision sake\n  //\n  //_.slice(array,start,end) or _.slice(array,start) => _.take()\n  //to chain them together=>\n  //create a loadash object which wraps an array, methods can then be chained together\n  let selected = _(items).slice(startIndex).take(pageSize).value();\n  // if (selected.length === 0) {\n  //   selected = _(items).slice(0).take(pageSize).value();\n  // }  /// I handles this from the parent by simply resetting currentPage to 1 on any click of another pagination\n  return selected;\n}\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Navbar = ({user}) => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <NavLink className=\"navbar-brand\" to=\"/\">\n        Vidly\n      </NavLink>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNav\"\n        aria-controls=\"navbarNav\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item\">\n            <NavLink className=\"nav-link\" to=\"/movies\">\n              Movies\n            </NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink className=\"nav-link\" to=\"/customers\">\n              Customers\n            </NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink className=\"nav-link\" to=\"/rentals\">\n              Rentals\n            </NavLink>\n          </li>\n        { !user && <React.Fragment>\n           <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/login\">\n                Login\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/register\">\n                Register\n              </NavLink>\n            </li>\n         </React.Fragment>}\n\n         { user && <React.Fragment>\n           <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/profile\">\n                {user.name}\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/logout\">\n                Logout\n              </NavLink>\n            </li>\n         </React.Fragment>}\n\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return <h1>Not Found</h1>;\n};\n\nexport default NotFound;\n","import React from \"react\";\n\nconst Customers = () => {\n  return <h1>Customers</h1>;\n};\n\nexport default Customers;\n","import React from \"react\";\n\nconst Rentals = () => {\n  return <h1>Rentals</h1>;\n};\n\nexport default Rentals;\n","import React from \"react\";\n\nconst Input = ({ label, name, error, ...rest }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        {...rest}\n        name={name}\n        // autoFocus\n        className=\"form-control\"\n        // ref={this.username}\n      />\n\n      <br />\n\n      {error &&\n        (error.constructor !== Array ? (\n          <div key={error} className=\"alert alert-danger\">\n            {error}\n          </div>\n        ) : (\n          error.map((err) => (\n            <div key={err} className=\"alert alert-danger\">\n              {err}\n            </div>\n          ))\n        ))}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\n\n// value for each option : option label,option value\n\nconst Select = ({ label, name, options, error, ...rest }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor=\"\">{label}</label>\n      <select {...rest} name={name} className=\"form-control\">\n        {options.map((option) => (\n          <option key={option._id} value={option._id}>\n            {option.name}\n          </option>\n        ))}\n      </select>\n\n      <br />\n\n      {error &&\n        (error.constructor !== Array ? (\n          <div key={error} className=\"alert alert-danger\">\n            {error}\n          </div>\n        ) : (\n          error.map((err) => (\n            <div key={err} className=\"alert alert-danger\">\n              {err}\n            </div>\n          ))\n        ))}\n    </div>\n  );\n};\n\nexport default Select;\n","import React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\nimport Input from \"./input\";\nimport Select from \"./select\";\nimport _ from \"lodash\";\n\nclass Form extends Component {\n  state = { data: {}, errors: {} };\n\n  validate = () => {\n    const errors = {};\n    const options = { abortEarly: false };\n    const result = Joi.validate(this.state.data, this.schema, options);\n\n    if (!result.error) return null;\n\n    result.error.details.map((error) => {\n      if (errors[error.path[0]])\n        return errors[error.path[0]].push(error.message);\n      else return (errors[error.path[0]] = new Array(error.message));\n    });\n    //because I want to collect all errors, if not I should  only get first and not an array\n\n    return errors;\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const errors = this.validate();\n    this.setState({ errors: errors || {} });\n    if (errors) return false;\n    // const username = this.username.current.value;\n    this.doSubmit();\n  };\n\n  validateProperty = (name, value) => {\n    //we can extract new object here tho and use ES6 computed property e.g\n\n    // const data = { [name]: value };\n    // const Schema = { [name]: this.Schema[name] };\n\n    const result = Joi.validate(value, this.schema[name]).error;\n    return result ? result.details[0].message : null;\n  };\n\n  handleChange = ({ currentTarget: input }) => {\n    const { name, value } = input;\n\n    const data = { ...this.state.data };\n    data[name] = value;\n    this.setState({ data });\n\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(name, value);\n    if (!errorMessage) delete errors[name];\n    else errors[name] = errorMessage;\n\n    this.setState({ errors });\n  };\n\n  renderInput(label, name, type = \"text\") {\n    const { errors, data } = this.state;\n    return (\n      <Input\n        id={name}\n        label={label}\n        name={name}\n        type={type}\n        value={_.get(data, name)}\n        onChange={this.handleChange}\n        error={errors[name]}\n        autoComplete=\"new-password\"\n      />\n    );\n  }\n\n  renderSelect(label, name, options) {\n    const { errors, data } = this.state;\n    return (\n      <Select\n        label={label}\n        id={name}\n        name={name}\n        value={_.get(data, name)}\n        onChange={this.handleChange}\n        options={options}\n        error={errors[name]}\n      ></Select>\n    );\n  }\n\n  renderButton(label) {\n    return (\n      <button\n        // disabled={this.validate()}\n        type=\"submit\"\n        className=\"btn btn-primary\"\n      >\n        {label}\n      </button>\n    );\n  }\n}\nexport default Form;\n","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport { toast } from \"react-toastify\";\nimport { getMovie, saveMovie } from \"../services/movieService\";\nimport { getGenres } from \"../services/genreService\";\nimport authService from \"../services/authService\";\nimport Form from \"./common/form\";\n\nclass MovieForm extends Form {\n  state = {\n    data: {\n      _id: \"\",\n      title: \"\",\n      genreId: \"\",\n      numberInStock: \"\",\n      dailyRentalRate: \"\",\n    },\n    errors: {},\n    genres: [],\n  };\n\n  schema = {\n    _id: Joi.required(),\n    title: Joi.string().required().label(\"Title\"),\n    genreId: Joi.string().required().label(\"Genre\"),\n    numberInStock: Joi.number().min(0).max(100).required().label(\"Stock\"),\n    dailyRentalRate: Joi.number().min(0).max(10).required().label(\"Rate\"),\n    // publishDate: Joi.required(),\n  };\n\n  populateGenre = async () => {\n    const { data: genres } = await getGenres();\n    this.setState({ genres });\n  };\n\n  populateMovie = async () => {\n    if (this.props.match.params.id === \"new\") return;\n\n    if (this.props.match.params.id !== \"new\")\n      if (!authService.getCurrentUser().isAdmin) window.location = \"/\";\n\n    try {\n      const { data: movie } = await getMovie(this.props.match.params.id);\n      this.setState({ data: this.mapToViewModel(movie) });\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404) {\n        toast.error(\"This movie can not be found\", { autoclose: 3000 });\n        return this.props.history.replace(\"/not-found\");\n      }\n    }\n  };\n\n  async componentDidMount() {\n    await this.populateGenre();\n    await this.populateMovie();\n  }\n\n  mapToViewModel(movie) {\n    return {\n      _id: movie._id,\n      title: movie.title,\n      genreId: movie.genre._id,\n      numberInStock: movie.numberInStock,\n      dailyRentalRate: movie.dailyRentalRate,\n    };\n  }\n  doSubmit = async () => {\n    try {\n      await saveMovie(this.state.data);\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404) {\n        toast.error(\"This movie can not be found\");\n      } else if (ex.response && ex.response.status === 400) {\n        toast.error(\"Invalid request\");\n      }\n    }\n\n    this.props.history.replace(\"/movies\");\n  };\n\n  render() {\n    // const { history, match } = this.props;\n\n    return (\n      <React.Fragment>\n        <h1>Movie Form</h1>\n        <form action=\"\" onSubmit={this.handleSubmit}>\n          {this.renderInput(\"Title\", \"title\")}\n          {this.renderSelect(\"Genre\", \"genreId\", this.state.genres)}\n          {this.renderInput(\"Number in Stock\", \"numberInStock\")}\n          {this.renderInput(\"Rate\", \"dailyRentalRate\")}\n          {this.renderButton(\"Update\")}\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default MovieForm;\n","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport { Redirect } from \"react-router-dom\";\nimport Form from \"./common/form\";\nimport auth from \"../services/authService\";\nimport authService from \"../services/authService\";\nclass LoginForm extends Form {\n  state = {\n    data: { username: \"\", password: \"\" },\n    errors: {},\n  };\n\n  schema = {\n    username: Joi.string().min(3).max(30).required().label(\"Email\"),\n    password: Joi.string().min(5).required().label(\"Password\"),\n  };\n\n  // username = React.createRef();\n  //do not always use ref just to make things happen\n  //avoid document object, that is the purpose of react, the abstraction\n  //uncontrolled to controlled forbidden\n  //undefined and null can't be value of controlled elements, when used.. that is uncontrolled,thus...\n  //...has diff state and no single source of truth\n\n  // componentDidMount = () => {\n  //   // this.username.current.focus();\n  // };\n\n  async doSubmit() {\n    //call the server\n    try {\n      const { username, password } = this.state.data;\n      await auth.login(username, password);\n\n      const { state } = this.props.location;\n\n      window.location = state ? state.from.pathname : \"/\";\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        const errors = { ...this.state.errors };\n        errors.username = ex.response.data;\n        this.setState({ errors });\n      }\n    }\n  }\n\n  render() {\n    if (authService.getCurrentUser()) return <Redirect to=\"/\" />;\n\n    return (\n      <div>\n        <h1>Login</h1>\n\n        <form action=\"\" onSubmit={this.handleSubmit}>\n          {/* do things at lower level first before extracting them */}\n\n          {this.renderInput(\"Username\", \"username\", \"email\")}\n\n          {this.renderInput(\"Password\", \"password\", \"password\")}\n\n          {this.renderButton(\"Login\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n","import http from \"./httpService\";\n\nconst registerApiEndpoint = \"/users\";\n\nexport function register(user) {\n  return http.post(registerApiEndpoint, {\n    email: user.email,\n    password: user.password,\n    name: user.name,\n  });\n}\n","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport { Redirect } from \"react-router-dom\";\nimport authService from \"../services/authService\";\nimport { register } from \"../services/userService\";\nimport auth from \"../services/authService\";\nimport Form from \"./common/form\";\n\nclass RegisterForm extends Form {\n  state = {\n    data: { email: \"\", password: \"\", name: \"\" },\n    errors: {},\n  };\n\n  schema = {\n    email: Joi.string().email({ minDomainAtoms: 2 }).required().label(\"Email\"),\n    password: Joi.string().min(5).required().label(\"Password\"),\n    name: Joi.string().required(),\n  };\n\n  doSubmit = async () => {\n    //call the server\n    try {\n      const response = await register(this.state.data);\n      // console.log(response);\n\n      auth.loginWithJWT(response.headers[\"x-auth-token\"]);\n\n      window.location = \"/\";\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        const errors = { ...this.state.errors };\n        errors.email = ex.response.data;\n        this.setState({ errors });\n      }\n    }\n  };\n\n  render() {\n    if (authService.getCurrentUser()) return <Redirect to=\"/\" />;\n\n    return (\n      <form action=\"\" onSubmit={this.handleSubmit}>\n        {this.renderInput(\"Email\", \"email\")}\n        {this.renderInput(\"Password\", \"password\", \"password\")}\n        {this.renderInput(\"Name\", \"name\")}\n        {this.renderButton(\"Register\")}\n      </form>\n    );\n  }\n}\n\nexport default RegisterForm;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport authService from \"../../services/authService\";\nimport { Redirect } from \"react-router-dom\";\n\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        return authService.getCurrentUser() ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: props.location },\n            }}\n          />\n        );\n      }}\n    />\n  );\n};\n\nexport default ProtectedRoute;\n","import { Component } from \"react\";\nimport auth from \"../services/authService\";\n\nclass Logout extends Component {\n  componentDidMount() {\n    auth.logout();\n    window.location = \"/\";\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default Logout;\n","import React, { Component } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport Movies from \"./components/movies\";\nimport Navbar from \"./components/navbar\";\nimport NotFound from \"./components/notFound\";\nimport Customers from \"./components/customers\";\nimport Rentals from \"./components/rentals\";\nimport MovieForm from \"./components/movieForm\";\nimport LoginForm from \"./components/loginForm\";\nimport RegisterForm from \"./components/regsiterForm\";\nimport ProtectedRoute from \"./components/common/protectedRoute\";\nimport auth from \"./services/authService\";\nimport Logout from \"./components/logout\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    const user = auth.getCurrentUser();\n    this.setState({ user });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <ToastContainer />\n\n        <Navbar user={this.state.user} />\n\n        <main role=\"main\" className=\"container\">\n          {/* Switch>Route*4[path=\"\"][component=\"\"] */}\n\n          <Switch>\n            <ProtectedRoute component={MovieForm} path=\"/movies/:id\" />\n            <Route path=\"/movies\" component={Movies} />} />\n            <Route path=\"/customers\" component={Customers} />\n            <Route path=\"/rentals\" component={Rentals} />\n            <Route path=\"/login\" component={LoginForm} />\n            <Route path=\"/register\" component={RegisterForm} />\n            <Route path=\"/logout\" component={Logout} />\n            <Redirect exact from=\"/\" to=\"/movies\" />\n            <Route path=\"/not-found\" component={NotFound} />\n            <Redirect to=\"not-found\" />\n          </Switch>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport logger from \"./services/logService\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport \"./index.css\";\n\n// console.log(\"Superman\", process.env.REACT_APP_NAME);\n\nlogger.init();\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}